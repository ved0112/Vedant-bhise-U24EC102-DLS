`timescale 1ps/1ps

module axi_tb ;

    reg clk;
    reg reset;
    reg [31:0]data_in;
    reg data_valid;

axi_stream UUT (
    .clk(clk) ,
    .reset(reset) ,
    .data_in (data_in),
    .data_valid(data_valid)
);


integer i;

initial clk = 0 ;
always #5 clk = ~clk ;

initial begin
    reset = 1 ;
    data_in = 0 ;
    data_valid = 0;

    #10;
    reset = 0 ;

    for (i = 0; i < 16; i = i + 1) begin
        @(negedge clk);
        data_in = i ;
        data_valid = 1;
        
        @(negedge clk);
        data_valid = 0;

        wait(UUT.master_int.tvalid == 0);
    end

    #100;

    $finish;
end

endmodule

